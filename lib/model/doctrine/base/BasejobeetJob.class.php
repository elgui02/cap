<?php

/**
 * BasejobeetJob
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_id
 * @property string $type
 * @property string $company
 * @property string $logo
 * @property string $url
 * @property string $position
 * @property string $location
 * @property clob $description
 * @property clob $how_to_apply
 * @property string $token
 * @property integer $is_public
 * @property integer $is_activated
 * @property string $email
 * @property timestamp $expires_at
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property jobeetCategory $category
 * 
 * @method integer        getId()           Returns the current record's "id" value
 * @method integer        getCategoryId()   Returns the current record's "category_id" value
 * @method string         getType()         Returns the current record's "type" value
 * @method string         getCompany()      Returns the current record's "company" value
 * @method string         getLogo()         Returns the current record's "logo" value
 * @method string         getUrl()          Returns the current record's "url" value
 * @method string         getPosition()     Returns the current record's "position" value
 * @method string         getLocation()     Returns the current record's "location" value
 * @method clob           getDescription()  Returns the current record's "description" value
 * @method clob           getHowToApply()   Returns the current record's "how_to_apply" value
 * @method string         getToken()        Returns the current record's "token" value
 * @method integer        getIsPublic()     Returns the current record's "is_public" value
 * @method integer        getIsActivated()  Returns the current record's "is_activated" value
 * @method string         getEmail()        Returns the current record's "email" value
 * @method timestamp      getExpiresAt()    Returns the current record's "expires_at" value
 * @method timestamp      getCreatedAt()    Returns the current record's "created_at" value
 * @method timestamp      getUpdatedAt()    Returns the current record's "updated_at" value
 * @method jobeetCategory getCategory()     Returns the current record's "category" value
 * @method jobeetJob      setId()           Sets the current record's "id" value
 * @method jobeetJob      setCategoryId()   Sets the current record's "category_id" value
 * @method jobeetJob      setType()         Sets the current record's "type" value
 * @method jobeetJob      setCompany()      Sets the current record's "company" value
 * @method jobeetJob      setLogo()         Sets the current record's "logo" value
 * @method jobeetJob      setUrl()          Sets the current record's "url" value
 * @method jobeetJob      setPosition()     Sets the current record's "position" value
 * @method jobeetJob      setLocation()     Sets the current record's "location" value
 * @method jobeetJob      setDescription()  Sets the current record's "description" value
 * @method jobeetJob      setHowToApply()   Sets the current record's "how_to_apply" value
 * @method jobeetJob      setToken()        Sets the current record's "token" value
 * @method jobeetJob      setIsPublic()     Sets the current record's "is_public" value
 * @method jobeetJob      setIsActivated()  Sets the current record's "is_activated" value
 * @method jobeetJob      setEmail()        Sets the current record's "email" value
 * @method jobeetJob      setExpiresAt()    Sets the current record's "expires_at" value
 * @method jobeetJob      setCreatedAt()    Sets the current record's "created_at" value
 * @method jobeetJob      setUpdatedAt()    Sets the current record's "updated_at" value
 * @method jobeetJob      setCategory()     Sets the current record's "category" value
 * 
 * @package    capacitacion
 * @subpackage model
 * @author     yo
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasejobeetJob extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('jobeet_job');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('category_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('company', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('position', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', 16777215, array(
             'type' => 'clob',
             'notnull' => true,
             'length' => 16777215,
             ));
        $this->hasColumn('how_to_apply', 'clob', 16777215, array(
             'type' => 'clob',
             'notnull' => true,
             'length' => 16777215,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_public', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => '1',
             'length' => 1,
             ));
        $this->hasColumn('is_activated', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => '0',
             'length' => 1,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('expires_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));


        $this->index('category_id_idx_idx', array(
             'fields' => 
             array(
              0 => 'category_id',
             ),
             ));
        $this->option('charset', 'latin1');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('jobeetCategory as category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}